{"ast":null,"code":"var _jsxFileName = \"/Users/danielmocanu/Desktop/robofriends/src/App.js\";\nimport React, { Component } from 'react';\nimport Cardlist from './Cardlist';\nimport Searchbox from './Searchbox';\nimport { robots } from './robots';\nimport './App.css';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.onSearchChange = event => {\n      //do this everytime you make a method use  => \n      this.setState({\n        searchfield: event.target.value\n      }); //set state is a react method. searchfeild is a object\n      //event.target.value inputs what you wrote\n      //setState is used to update state bc you are typing\n    };\n\n    this.state = {\n      // state describes application this is an array\n      robots: robots,\n      //this.robots\n      searchfield: '' //this.search...\n\n    };\n  }\n\n  render() {\n    // render has to return something from class\n    const filteredRobots = this.state.robots.filter(robots => {\n      //this.state.robots access's robots!!!!. syntax\n      return robots.name.toLowerCase().includes(this.state.searchfield.toLowerCase()); //same thing^\n    });\n    return (// it needs to be in div, one single component\n      React.createElement(\"div\", {\n        className: \"tc\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, \" RoboFriends \"), React.createElement(Searchbox, {\n        searchChange: this.onSearchChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }), React.createElement(Cardlist, {\n        robots: filteredRobots,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }))\n    );\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/danielmocanu/Desktop/robofriends/src/App.js"],"names":["React","Component","Cardlist","Searchbox","robots","App","constructor","onSearchChange","event","setState","searchfield","target","value","state","render","filteredRobots","filter","name","toLowerCase","includes"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAAQC,MAAR,QAAqB,UAArB;AACA,OAAO,WAAP;;AAKA,MAAMC,GAAN,SAAkBJ,SAAlB,CAA4B;AACxBK,EAAAA,WAAW,GAAG;AACV;;AADU,SAQdC,cARc,GAQIC,KAAD,IAAU;AAAE;AACzB,WAAKC,QAAL,CAAc;AAACC,QAAAA,WAAW,EAAEF,KAAK,CAACG,MAAN,CAAaC;AAA3B,OAAd,EADuB,CAC0B;AACjD;AACA;AAGH,KAda;;AAEV,SAAKC,KAAL,GAAa;AAAE;AACXT,MAAAA,MAAM,EAAEA,MADC;AACO;AAChBM,MAAAA,WAAW,EAAE,EAFJ,CAEO;;AAFP,KAAb;AAIH;;AASDI,EAAAA,MAAM,GAAG;AAAE;AACP,UAAMC,cAAc,GAAI,KAAKF,KAAL,CAAWT,MAAX,CAAkBY,MAAlB,CAAyBZ,MAAM,IAAI;AAAC;AACxD,aAAOA,MAAM,CAACa,IAAP,CAAYC,WAAZ,GAA0BC,QAA1B,CAAmC,KAAKN,KAAL,CAAWH,WAAX,CAAuBQ,WAAvB,EAAnC,CAAP,CADuD,CACyB;AACnF,KAFuB,CAAxB;AAGA,WAAQ;AACJ;AAAK,QAAA,SAAS,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,EAEI,oBAAC,SAAD;AAAW,QAAA,YAAY,EAAE,KAAKX,cAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAGI,oBAAC,QAAD;AAAU,QAAA,MAAM,EAAGQ,cAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ;AADJ;AASH;;AA7BuB;;AA+B5B,eAAeV,GAAf","sourcesContent":["import React, {Component} from 'react';\nimport Cardlist from './Cardlist';\nimport Searchbox from './Searchbox';\nimport {robots} from './robots';\nimport './App.css';\n\n\n\n\nclass App extends Component {\n    constructor() {\n        super()\n        this.state = { // state describes application this is an array\n            robots: robots, //this.robots\n            searchfield: '' //this.search...\n        }\n    }\n\n    onSearchChange = (event) =>{ //do this everytime you make a method use  => \n        this.setState({searchfield: event.target.value}) //set state is a react method. searchfeild is a object\n        //event.target.value inputs what you wrote\n        //setState is used to update state bc you are typing\n\n    \n    }\n    render() { // render has to return something from class\n        const filteredRobots  = this.state.robots.filter(robots => {//this.state.robots access's robots!!!!. syntax\n            return robots.name.toLowerCase().includes(this.state.searchfield.toLowerCase());//same thing^\n        });\n        return( // it needs to be in div, one single component\n            <div className='tc'>  \n                <h1> RoboFriends </h1>\n                <Searchbox searchChange={this.onSearchChange}/>\n                <Cardlist robots ={filteredRobots}/>\n    \n    \n            </div>\n        );\n    }       \n}\nexport default App;"]},"metadata":{},"sourceType":"module"}